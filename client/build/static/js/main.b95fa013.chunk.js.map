{"version":3,"sources":["views/Main.js","components/BackHome.js","components/PetForm.js","views/CreatePet.js","views/PetInfo.js","views/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["props","allPets","href","map","Pet","index","key","name","type","_id","initialPetID","initialName","initialType","initialDescription","initialSkillOne","initialSkillTwo","initialSkillThree","onSubmitProp","useState","petID","setName","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","nameError","setNameError","typeError","setTypeError","descriptionError","setDescriptionError","submittable","setSubmittable","onSubmit","e","preventDefault","err","console","log","alert","onChange","target","value","length","handleName","defaultValue","style","color","handleType","handleDescription","BackHome","PetForm","handleSubmit","currentPet","setCurrentPet","setLoaded","useEffect","axios","get","then","response","data","catch","error","onClick","id","handleDelete","loaded","handleEdit","App","setAllPets","petAdopted","setPetAdopted","petSubmitted","setPetSubmitted","petEdited","setPetEdited","className","Main","path","CreatePet","post","navigate","PetInfo","delete","EditPet","put","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"iQACe,WAACA,GAAW,IAChBC,EAAYD,EAAZC,QACP,OACI,6BACI,uBAAGC,KAAK,aAAR,4BACA,sEACA,+BACI,+BACI,4BACI,oCACA,oCACA,yCAGR,+BAEQD,EAAQE,KAAI,SAACC,EAAKC,GAAN,OACR,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,MACT,4BAAI,uBAAGN,KAAM,SAAWE,EAAIK,IAAI,KAA5B,WAAJ,MAAoD,uBAAGP,KAAM,SAAWE,EAAIK,IAAI,UAA5B,iBClBrE,WAACT,GAEZ,OACI,uBAAGE,KAAK,KAAR,iBCLO,WAACF,GAAW,IAChBU,EAAkIV,EAAlIU,aAAcC,EAAoHX,EAApHW,YAAaC,EAAuGZ,EAAvGY,YAAaC,EAA0Fb,EAA1Fa,mBAAoBC,EAAsEd,EAAtEc,gBAAiBC,EAAqDf,EAArDe,gBAAiBC,EAAoChB,EAApCgB,kBAAmBC,EAAiBjB,EAAjBiB,aADlG,EAEIC,mBAASR,GAFb,mBAEfS,EAFe,aAGED,mBAASP,IAHX,mBAGfJ,EAHe,KAGTa,EAHS,OAIEF,mBAASN,GAJX,mBAIfJ,EAJe,KAITa,EAJS,OAKgBH,mBAASL,GALzB,mBAKfS,EALe,KAKFC,EALE,OAMUL,mBAASJ,GANnB,mBAMfU,EANe,KAMLC,EANK,OAOUP,mBAASH,GAPnB,mBAOfW,EAPe,KAOLC,EAPK,OAQcT,mBAASF,GARvB,mBAQfY,EARe,KAQHC,EARG,OAUYX,mBAAS,IAVrB,mBAUfY,EAVe,KAUJC,EAVI,OAWYb,mBAAS,IAXrB,mBAWfc,EAXe,KAWJC,EAXI,OAY0Bf,mBAAS,IAZnC,mBAYfgB,EAZe,KAYGC,EAZH,OAagBjB,oBAAS,GAbzB,mBAafkB,EAbe,KAaFC,GAbE,KAmEtB,OACI,0BAAMC,SATc,SAAAC,GACpB,GAAIH,EAAa,CACbG,EAAEC,iBACF,IAAMvB,EAAa,CAAEE,QAAOZ,OAAMC,OAAMc,cAAaE,WAAUE,WAAUE,eACzE,MAAOa,GAAMC,QAAQC,IAAIF,SAExBG,MAAM,0CAIP,2BACI,4CAAwB,6BACxB,2BAAOpC,KAAK,OAAOqC,SAAU,SAACN,GAAD,OAxDtB,SAACA,GAChBnB,EAAQmB,EAAEO,OAAOC,OACbR,EAAEO,OAAOC,MAAMC,OAAS,GACxBX,IAAe,GACfN,EAAa,qBACNQ,EAAEO,OAAOC,MAAMC,OAAS,GAC/BX,IAAe,GACfN,EAAa,6CAEbA,EAAa,IACbM,IAAe,IA8CyBY,CAAWV,IAAIW,aAAc3C,KAGjEuB,EACI,uBAAGqB,MAAO,CAAEC,MAAO,QAAUtB,GAC7B,GAER,2BACI,4CAAwB,6BACxB,2BAAOtB,KAAK,OAAOqC,SAAU,SAACN,GAAD,OAlDtB,SAACA,GAChBlB,EAAQkB,EAAEO,OAAOC,OACbR,EAAEO,OAAOC,MAAMC,OAAS,GACxBX,IAAe,GACfJ,EAAa,yBACNM,EAAEO,OAAOC,MAAMC,OAAS,GAC/BX,IAAe,GACfJ,EAAa,iDAEbA,EAAa,IACbI,IAAe,IAwCyBgB,CAAWd,IAAIW,aAAc1C,KAGjEwB,EACI,uBAAGmB,MAAO,CAAEC,MAAO,QAAUpB,GAC7B,GAER,2BACI,mDAA+B,6BAC/B,2BAAOxB,KAAK,OAAOqC,SAAU,SAACN,GAAD,OA7Cf,SAACA,GACvBhB,EAAegB,EAAEO,OAAOC,OACpBR,EAAEO,OAAOC,MAAMC,OAAS,GACxBX,IAAe,GACfF,EAAoB,gCACbI,EAAEO,OAAOC,MAAMC,OAAS,GAC/BX,IAAe,GACfF,EAAoB,wDAEpBA,EAAoB,IACpBE,IAAe,IAmCyBiB,CAAkBf,IAAIW,aAAc5B,KAGxEY,EACI,uBAAGiB,MAAO,CAAEC,MAAO,QAAUlB,GAC7B,GAER,2BACI,2CAAuB,6BACvB,2BAAO1B,KAAK,OAAOqC,SAAU,SAACN,GAAD,OAAOd,EAAYc,EAAEO,OAAOC,QAAQG,aAAc1B,KAEnF,2BACI,2CAAuB,6BACvB,2BAAOhB,KAAK,OAAOqC,SAAU,SAACN,GAAD,OAAOZ,EAAYY,EAAEO,OAAOC,QAAQG,aAAcxB,KAEnF,2BACI,2CAAuB,6BACvB,2BAAOlB,KAAK,OAAOqC,SAAU,SAACN,GAAD,OAAOV,EAAcU,EAAEO,OAAOC,QAAQG,aAActB,KAErF,2BAAOpB,KAAK,aCzGT,WAACR,GAOZ,OACI,6BACI,kBAACuD,EAAD,MACA,kBAACC,EAAD,CAASvC,aARO,SAACsB,GACrBvC,EAAMyD,aAAalB,IAOyB5B,YAAY,GAAGC,YAAY,GAAGC,mBAAmB,OCVtF,WAACb,GAAW,IAAD,EACYkB,mBAAS,IADrB,mBACjBwC,EADiB,KACLC,EADK,OAEMzC,oBAAS,GAFf,mBAEP0C,GAFO,aAGE1C,mBAAS,IAHX,mBAGfX,EAHe,KAGTa,EAHS,OAIEF,mBAAS,IAJX,mBAIfV,EAJe,KAITa,EAJS,OAKgBH,mBAAS,IALzB,mBAKfI,EALe,KAKFC,EALE,OAMUL,qBANV,mBAMfM,EANe,KAMLC,EANK,OAOUP,qBAPV,mBAOfQ,EAPe,KAOLC,EAPK,OAQcT,qBARd,mBAQfU,EARe,KAQHC,EARG,KAUtBgC,qBAAU,WACNC,IAAMC,IAAI,iCAAmC/D,EAAMmB,MAAQ,KAAK6C,MAAK,SAAAC,GACjEN,EAAcD,EAAaO,EAASC,MACpC9C,EAAQsC,EAAWnD,MACnBc,EAAQqC,EAAWlD,MACnBe,EAAemC,EAAWpC,aAC1BG,EAAYiC,EAAWlC,UACvBG,EAAY+B,EAAWhC,UACvBG,EAAc6B,EAAW9B,YACzBgC,GAAU,MAETO,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,QAGrB,IAOH,OACI,6BACI,kBAACb,EAAD,MACA,8CAAoBhD,GAAU,4BAAQ8D,QAAS,WARlC,IAACC,IAQsDZ,EAAWjD,IAPnFT,EAAMuE,aAAaD,KAOe,SAAgEZ,EAAWnD,MACzG,yBAAK+D,GAAG,WACJ,yCAAc,6BAAd,gBAAgC,6BAAhC,YACA,2BAAI9D,EAAK,6BAAOc,EAAY,6BAAOE,EAAnC,KAA+CE,EAA/C,KAA2DE,MCpC5D,WAAC5B,GAAW,IAAD,EACYkB,mBAAS,IADrB,mBACjBwC,EADiB,KACLC,EADK,OAEMzC,oBAAS,GAFf,mBAEfsD,EAFe,KAEPZ,EAFO,OAGE1C,mBAAS,IAHX,mBAGfX,EAHe,KAGTa,EAHS,OAIEF,mBAAS,IAJX,mBAIfV,EAJe,KAITa,EAJS,OAKgBH,mBAAS,IALzB,mBAKfI,EALe,KAKFC,EALE,OAMUL,qBANV,mBAMfM,EANe,KAMLC,EANK,OAOUP,qBAPV,mBAOfQ,EAPe,KAOLC,EAPK,OAQcT,qBARd,mBAQfU,EARe,KAQHC,EARG,KAUtBgC,qBAAU,WACNC,IAAMC,IAAI,iCAAmC/D,EAAMmB,MAAQ,KAAK6C,MAAK,SAAAC,GACjEN,EAAcD,EAAaO,EAASC,MACpC9C,EAAQsC,EAAWnD,MACnBc,EAAQqC,EAAWlD,MACnBe,EAAemC,EAAWpC,aAC1BG,EAAYiC,EAAWlC,UACvBG,EAAY+B,EAAWhC,UACvBG,EAAc6B,EAAW9B,YACzBgC,GAAU,MAETO,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,QAGrB,IAMH,OACI,6BACI,kBAACb,EAAD,MACCiB,GACG,kBAAChB,EAAD,CAAS9C,aAAcgD,EAAWjD,IAAKE,YAAaJ,EAAMK,YAAaJ,EAAMK,mBAAoBS,EAAaR,gBAAiBU,EAAUT,gBAAiBW,EAAUV,kBAAmBY,EAAYX,aARvL,SAACsB,GACrBvC,EAAMyE,WAAWlC,Q,MCgDVmC,MAxEf,WAAgB,IAAD,EACmBxD,mBAAS,IAD5B,mBACJjB,EADI,KACK0E,EADL,OAEyBzD,mBAAS,GAFlC,mBAEJ0D,EAFI,KAEQC,EAFR,OAG6B3D,mBAAS,GAHtC,mBAGJ4D,EAHI,KAGUC,EAHV,OAIuB7D,mBAAS,GAJhC,mBAIJ8D,EAJI,KAIOC,EAJP,KA2DX,OArDApB,qBAAU,WACNC,IAAMC,IAAI,kCAAkCC,MAAK,SAAAC,GAC7CU,EAAWV,EAASC,SAEnBC,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,QAErB,CAACQ,EAAYE,EAAcE,IA+C1B,yBAAKE,UAAU,OACX,2CACA,kBAAC,IAAD,KACI,kBAACC,EAAD,CAAMC,KAAK,IAAInF,QAASA,IACxB,kBAACoF,EAAD,CAAWD,KAAK,YAAY3B,aAjDnB,SAAClB,GAClBG,QAAQC,IAAI,qBACZmB,IAAMwB,KAAK,oCAAqC,CAC5C/E,KAAMgC,EAAEhC,KACRC,KAAM+B,EAAE/B,KACRc,YAAaiB,EAAEjB,YACfE,SAAUe,EAAEf,SACZE,SAAUa,EAAEb,SACZE,WAAYW,EAAEX,aAEboC,KAAKe,EAAgBD,EAAe,GAAIS,YAAS,MACjDpB,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,SAsCZ,kBAACoB,EAAD,CAASJ,KAAK,eAAeb,aAnBpB,SAACD,GAElBR,IAAM2B,OAAO,iCAAmCnB,EAAK,WAAWN,MAAK,SAAAC,GACjEvB,QAAQC,IAAI,eACZkC,EAAcD,EAAW,GACzBlC,QAAQC,IAAIiC,GACZW,YAAS,QAERpB,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,SAWZ,kBAACsB,EAAD,CAASN,KAAK,oBAAoBX,WAnC3B,SAAClC,GAChBuB,IAAM6B,IAAI,iCAAmCpD,EAAEpB,MAAQ,QAAS,CAC5DZ,KAAMgC,EAAEhC,KACRC,KAAM+B,EAAE/B,KACRc,YAAaiB,EAAEjB,YACfE,SAAUe,EAAEf,SACZE,SAAUa,EAAEb,SACZE,WAAYW,EAAEX,aAEboC,KAAKiB,EAAaD,EAAY,GAAIO,YAAS,MAC3CpB,OAAM,SAAUC,GACb1B,QAAQC,IAAIyB,YCxCRwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdvC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMuC,c","file":"static/js/main.b95fa013.chunk.js","sourcesContent":["import React from 'react';\r\nexport default (props) => {\r\n    const{ allPets } = props\r\n    return (\r\n        <div>\r\n            <a href=\"pets/new/\">add a pet to the shelter</a>\r\n            <h2>These pets are looking for a good home</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        allPets.map((Pet, index) =>\r\n                            <tr key={index}>\r\n                                <td>{Pet.name}</td>\r\n                                <td>{Pet.type}</td>\r\n                                <td><a href={\"/pets/\" + Pet._id+\"/\"} >details</a> | <a href={\"/pets/\" + Pet._id+\"/edit/\"}>Edit</a></td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <a href=\"/\" >\r\n            Back To Home\r\n        </a>\r\n    )\r\n}","import React, { useState } from 'react'\r\nexport default (props) => {\r\n    const {initialPetID, initialName, initialType, initialDescription, initialSkillOne, initialSkillTwo, initialSkillThree, onSubmitProp } = props;\r\n    const [petID, setPetID] = useState(initialPetID)\r\n    const [name, setName] = useState(initialName);\r\n    const [type, setType] = useState(initialType);\r\n    const [description, setDescription] = useState(initialDescription);\r\n    const [skillOne, setSkillOne] = useState(initialSkillOne);\r\n    const [skillTwo, setSkillTwo] = useState(initialSkillTwo);\r\n    const [skillThree, setSkillThree] = useState(initialSkillThree);\r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [typeError, setTypeError] = useState(\"\");\r\n    const [descriptionError, setDescriptionError] = useState(\"\");\r\n    const [submittable, setSubmittable] = useState(false)\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n        if (e.target.value.length < 1) {\r\n            setSubmittable(false);\r\n            setNameError(\"Name is required\")\r\n        } else if (e.target.value.length < 3) {\r\n            setSubmittable(false);\r\n            setNameError(\"Name must be at least 3 characters long\")\r\n        } else {\r\n            setNameError(\"\");\r\n            setSubmittable(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleType = (e) => {\r\n        setType(e.target.value);\r\n        if (e.target.value.length < 1) {\r\n            setSubmittable(false);\r\n            setTypeError(\"Pet type is required\")\r\n        } else if (e.target.value.length < 3) {\r\n            setSubmittable(false);\r\n            setTypeError(\"Pet type must be at least 3 characters long\")\r\n        } else {\r\n            setTypeError(\"\");\r\n            setSubmittable(true);\r\n        }\r\n    }\r\n\r\n    const handleDescription = (e) => {\r\n        setDescription(e.target.value);\r\n        if (e.target.value.length < 1) {\r\n            setSubmittable(false);\r\n            setDescriptionError(\"Pet description is required\")\r\n        } else if (e.target.value.length < 3) {\r\n            setSubmittable(false);\r\n            setDescriptionError(\"Pet description must be at least 3 characters long\")\r\n        } else {\r\n            setDescriptionError(\"\");\r\n            setSubmittable(true);\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n        if (submittable) {\r\n            e.preventDefault();\r\n            try { onSubmitProp({ petID, name, type, description, skillOne, skillTwo, skillThree }) }\r\n            catch (err) {console.log(err)}\r\n        }\r\n        else alert(\"please fix errors before submitting \");\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmitHandler}>\r\n            <p>\r\n                <label>Pet Name:</label><br />\r\n                <input type=\"text\" onChange={(e) => handleName(e)} defaultValue={name} />\r\n            </p>\r\n            {\r\n                nameError ?\r\n                    <p style={{ color: 'red' }}>{nameError}</p> :\r\n                    ''\r\n            }\r\n            <p>\r\n                <label>Pet Type:</label><br />\r\n                <input type=\"text\" onChange={(e) => handleType(e)} defaultValue={type} />\r\n            </p>\r\n            {\r\n                typeError ?\r\n                    <p style={{ color: 'red' }}>{typeError}</p> :\r\n                    ''\r\n            }\r\n            <p>\r\n                <label>Pet Description:</label><br />\r\n                <input type=\"text\" onChange={(e) => handleDescription(e)} defaultValue={description} />\r\n            </p>\r\n            {\r\n                descriptionError ?\r\n                    <p style={{ color: 'red' }}>{descriptionError}</p> :\r\n                    ''\r\n            }\r\n            <p>\r\n                <label>Skill 1:</label><br />\r\n                <input type=\"text\" onChange={(e) => setSkillOne(e.target.value)} defaultValue={skillOne} />\r\n            </p>\r\n            <p>\r\n                <label>Skill 2:</label><br />\r\n                <input type=\"text\" onChange={(e) => setSkillTwo(e.target.value)} defaultValue={skillTwo} />\r\n            </p>\r\n            <p>\r\n                <label>Skill 3:</label><br />\r\n                <input type=\"text\" onChange={(e) => setSkillThree(e.target.value)} defaultValue={skillThree} />\r\n            </p>\r\n            <input type=\"submit\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport BackHome from '../components/BackHome';\r\nimport PetForm from '../components/PetForm';\r\n\r\nexport default (props) => {\r\n\r\n    const onSubmitHandler = (e) => {\r\n        props.handleSubmit(e)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <BackHome />\r\n            <PetForm onSubmitProp={onSubmitHandler} initialName=\"\" initialType=\"\" initialDescription=\"\"/>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BackHome from '../components/BackHome';\r\nimport axios from 'axios';\r\n\r\nexport default (props) => {\r\n    let [currentPet, setCurrentPet] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skillOne, setSkillOne] = useState();\r\n    const [skillTwo, setSkillTwo] = useState();\r\n    const [skillThree, setSkillThree] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet/\" + props.petID + \"/\").then(response => {\r\n            setCurrentPet(currentPet = response.data);\r\n            setName(currentPet.name);\r\n            setType(currentPet.type);\r\n            setDescription(currentPet.description);\r\n            setSkillOne(currentPet.skillOne);\r\n            setSkillTwo(currentPet.skillTwo);\r\n            setSkillThree(currentPet.skillThree);\r\n            setLoaded(true);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n    }, []);\r\n\r\n    const handleDelete = (id) => {\r\n        props.handleDelete(id);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <BackHome />\r\n            <h2>Details about: {name}</h2><button onClick={() => { handleDelete(currentPet._id) }}>Adopt {currentPet.name}</button>\r\n            <div id=\"petInfo\">\r\n                <h3>Pet type: <br/>Description: <br/>Skills: </h3>\r\n                <p>{type}<br />{description}<br />{skillOne}, {skillTwo}, {skillThree}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BackHome from '../components/BackHome';\r\nimport PetForm from '../components/PetForm';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default (props) => {\r\n    let [currentPet, setCurrentPet] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skillOne, setSkillOne] = useState();\r\n    const [skillTwo, setSkillTwo] = useState();\r\n    const [skillThree, setSkillThree] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet/\" + props.petID + \"/\").then(response => {\r\n            setCurrentPet(currentPet = response.data);\r\n            setName(currentPet.name);\r\n            setType(currentPet.type);\r\n            setDescription(currentPet.description);\r\n            setSkillOne(currentPet.skillOne);\r\n            setSkillTwo(currentPet.skillTwo);\r\n            setSkillThree(currentPet.skillThree);\r\n            setLoaded(true);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n    }, []);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        props.handleEdit(e);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BackHome />\r\n            {loaded && (\r\n                <PetForm initialPetID={currentPet._id} initialName={name} initialType={type} initialDescription={description} initialSkillOne={skillOne} initialSkillTwo={skillTwo} initialSkillThree={skillThree} onSubmitProp={onSubmitHandler}/>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport axios from 'axios';\nimport Main from './views/Main';\nimport CreatePet from './views/CreatePet';\nimport PetInfo from './views/PetInfo';\nimport EditPet from './views/EditPet';\n\nimport './App.css';\n\nfunction App() {\n    const [allPets, setAllPets] = useState([]);\n    const [petAdopted, setPetAdopted] = useState(0);\n    const [petSubmitted, setPetSubmitted] = useState(0);\n    const [petEdited, setPetEdited] = useState(0);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pets\").then(response => {\n            setAllPets(response.data);\n        })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }, [petAdopted, petSubmitted, petEdited]);\n\n    const handleSubmit = (e) => {\n        console.log(\"in submit handler\")\r\n        axios.post('http://localhost:8000/api/pet/new', {\r\n            name: e.name,\r\n            type: e.type,\r\n            description: e.description,\r\n            skillOne: e.skillOne,\r\n            skillTwo: e.skillTwo,\r\n            skillThree: e.skillThree\r\n        })\r\n            .then(setPetSubmitted(petSubmitted + 1), navigate(\"/\"))\r\n            .catch(function (error) {\n                console.log(error);\n            })\r\n    }\n\n    const handleEdit = (e) => {\r\n        axios.put(\"http://localhost:8000/api/pet/\" + e.petID + \"/edit\", {\r\n            name: e.name,\r\n            type: e.type,\r\n            description: e.description,\r\n            skillOne: e.skillOne,\r\n            skillTwo: e.skillTwo,\r\n            skillThree: e.skillThree\r\n        })\r\n            .then(setPetEdited(petEdited + 1), navigate(\"/\"))\r\n            .catch(function (error) {\n                console.log(error);\n            })\r\n    }\n\n    const handleDelete = (id) => {\n        //console.log(id);\n        axios.delete(\"http://localhost:8000/api/pet/\" + id + \"/delete\").then(response => {\n            console.log(\"Pet Adopted\");\n            setPetAdopted(petAdopted+1);\n            console.log(petAdopted);\n            navigate(\"/\");\n        })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Pet Shelter</h1>\n            <Router>\n                <Main path=\"/\" allPets={allPets} />\n                <CreatePet path=\"pets/new/\" handleSubmit={handleSubmit}/>\n                <PetInfo path=\"pets/:petID/\" handleDelete={handleDelete}/>\n                <EditPet path=\"pets/:petID/edit/\" handleEdit={handleEdit}/>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}